from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardRemove
from states.buy_proxy import BuyProxyStates
from keyboards.menus import get_type_kb, get_country_kb, get_duration_kb, get_confirm_kb, get_main_menu

router = Router()

@router.message(F.text == "üì¶ –ö—É–ø–∏—Ç—å –ø—Ä–æ–∫—Å–∏")
async def buy_proxy_start(message: types.Message, state: FSMContext):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ–∫—Å–∏:", reply_markup=get_type_kb())
    await state.set_state(BuyProxyStates.ChoosingType)

@router.message(BuyProxyStates.ChoosingType)
async def choose_type(message: types.Message, state: FSMContext):
    print("choose_type")
    await state.update_data(proxy_type=message.text)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É:", reply_markup=get_country_kb())
    await state.set_state(BuyProxyStates.ChoosingCountry)

@router.message(BuyProxyStates.ChoosingCountry)
async def choose_duration(message: types.Message, state: FSMContext):
    print("choose_duration")
    await state.update_data(country=message.text)
    await message.answer("–ù–∞ –∫–∞–∫–æ–π —Å—Ä–æ–∫:", reply_markup=get_duration_kb())
    await state.set_state(BuyProxyStates.ChoosingDuration)

@router.message(BuyProxyStates.ChoosingDuration)
async def choose_quantity(message: types.Message, state: FSMContext):
    print("choose_quantity")
    await state.update_data(duration=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–∫—Å–∏:", reply_markup=ReplyKeyboardRemove())
    await state.set_state(BuyProxyStates.ChoosingQuantity)

@router.message(BuyProxyStates.ChoosingQuantity)
async def choose_confirming(message: types.Message, state: FSMContext):
    print("choose_confirming")
    await state.update_data(quantity=message.text)
    data = await state.get_data()

    summary = (
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏:\n"
        f"–¢–∏–ø: {data['proxy_type']}\n"
        f"–°—Ç—Ä–∞–Ω–∞: {data['country']}\n"
        f"–°—Ä–æ–∫: {data['duration']}\n"
        f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {data['quantity']}\n\n"
        f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑?"
    )
    await message.answer(summary, reply_markup=get_confirm_kb())
    await state.set_state(BuyProxyStates.Confirming)

@router.message(BuyProxyStates.Confirming, F.text == "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å")
async def choose_confirm(message: types.Message, state: FSMContext):
    print("choose_confirm")
    await message.answer("–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É. –°–ø–∞—Å–∏–±–æ:", reply_markup=get_main_menu())
    await state.clear()

@router.message(BuyProxyStates.Confirming, F.text == "‚ùå –û—Ç–º–µ–Ω–∞")
async def choose_cancel(message: types.Message, state: FSMContext):
    await message.answer("–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω.", reply_markup=get_main_menu())
    await state.clear()
